/* ex: set ro ft=c: -*- buffer-read-only: t -*-
 *
 *    opnames.h
 *
 *    Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
 *    2008 by Larry Wall and others
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 *
 * !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
 * This file is built by regen/opcode.pl from its data.
 * Any changes made here will be lost!
 */

typedef enum opcode {
	OP_NULL		 = 0,
	OP_STUB		 = 1,
	OP_SCALAR	 = 2,
	OP_PUSHMARK	 = 3,
	OP_WANTARRAY	 = 4,
	OP_CONST	 = 5,
	OP_GVSV		 = 6,
	OP_GV		 = 7,
	OP_GELEM	 = 8,
	OP_PADSV	 = 9,
	OP_PADAV	 = 10,
	OP_PADHV	 = 11,
	OP_PADANY	 = 12,
	OP_PUSHRE	 = 13,
	OP_SASSIGN	 = 14,
	OP_AASSIGN	 = 15,
	OP_CHOP		 = 16,
	OP_SCHOP	 = 17,
	OP_CHOMP	 = 18,
	OP_SCHOMP	 = 19,
	OP_DEFINED	 = 20,
	OP_UNDEF	 = 21,
	OP_STUDY	 = 22,
	OP_POS		 = 23,
	OP_PREINC	 = 24,
	OP_I_PREINC	 = 25,
	OP_PREDEC	 = 26,
	OP_I_PREDEC	 = 27,
	OP_POSTINC	 = 28,
	OP_I_POSTINC	 = 29,
	OP_POSTDEC	 = 30,
	OP_I_POSTDEC	 = 31,
	OP_MULTIPLY	 = 32,
	OP_I_MULTIPLY	 = 33,
	OP_U_MULTIPLY	 = 34,
	OP_DIVIDE	 = 35,
	OP_I_DIVIDE	 = 36,
	OP_MODULO	 = 37,
	OP_I_MODULO	 = 38,
	OP_REPEAT	 = 39,
	OP_ADD		 = 40,
	OP_I_ADD	 = 41,
	OP_U_ADD	 = 42,
	OP_SUBTRACT	 = 43,
	OP_I_SUBTRACT	 = 44,
	OP_U_SUBTRACT	 = 45,
	OP_CONCAT	 = 46,
	OP_STRINGIFY	 = 47,
	OP_POW		 = 48,
	OP_I_POW	 = 49,
	OP_LEFT_SHIFT	 = 50,
	OP_RIGHT_SHIFT	 = 51,
	OP_LT		 = 52,
	OP_I_LT		 = 53,
	OP_GT		 = 54,
	OP_I_GT		 = 55,
	OP_LE		 = 56,
	OP_I_LE		 = 57,
	OP_GE		 = 58,
	OP_I_GE		 = 59,
	OP_EQ		 = 60,
	OP_I_EQ		 = 61,
	OP_NE		 = 62,
	OP_I_NE		 = 63,
	OP_CMP		 = 64,
	OP_I_CMP	 = 65,
	OP_S_LT		 = 66,
	OP_S_GT		 = 67,
	OP_S_LE		 = 68,
	OP_S_GE		 = 69,
	OP_S_EQ		 = 70,
	OP_S_NE		 = 71,
	OP_S_CMP	 = 72,
	OP_BIT_AND	 = 73,
	OP_BIT_XOR	 = 74,
	OP_BIT_OR	 = 75,
	OP_I_BIT_AND	 = 76,
	OP_I_BIT_XOR	 = 77,
	OP_I_BIT_OR	 = 78,
	OP_S_BIT_AND	 = 79,
	OP_S_BIT_XOR	 = 80,
	OP_S_BIT_OR	 = 81,
	OP_NEGATE	 = 82,
	OP_I_NEGATE	 = 83,
	OP_NOT		 = 84,
	OP_COMPLEMENT	 = 85,
	OP_I_COMPLEMENT	 = 86,
	OP_S_COMPLEMENT	 = 87,
	OP_SMARTMATCH	 = 88,
	OP_ATAN2	 = 89,
	OP_SIN		 = 90,
	OP_COS		 = 91,
	OP_RAND		 = 92,
	OP_SRAND	 = 93,
	OP_EXP		 = 94,
	OP_LOG		 = 95,
	OP_SQRT		 = 96,
	OP_INT		 = 97,
	OP_HEX		 = 98,
	OP_OCT		 = 99,
	OP_ABS		 = 100,
	OP_INT_CONST	 = 101,
	OP_UINT_CONST	 = 102,
	OP_STR_CONST	 = 103,
	OP_NUM_CONST	 = 104,
	OP_BOX_INT	 = 105,
	OP_BOX_UINT	 = 106,
	OP_BOX_STR	 = 107,
	OP_BOX_NUM	 = 108,
	OP_UNBOX_INT	 = 109,
	OP_UNBOX_UINT	 = 110,
	OP_UNBOX_STR	 = 111,
	OP_UNBOX_NUM	 = 112,
	OP_INT_SASSIGN	 = 113,
	OP_UINT_SASSIGN	 = 114,
	OP_NUM_SASSIGN	 = 115,
	OP_STR_SASSIGN	 = 116,
	OP_INT_PADSV	 = 117,
	OP_UINT_PADSV	 = 118,
	OP_STR_PADSV	 = 119,
	OP_NUM_PADSV	 = 120,
	OP_UINT_LEFT_SHIFT = 121,
	OP_UINT_RIGHT_SHIFT = 122,
	OP_UINT_POW	 = 123,
	OP_UINT_COMPLEMENT = 124,
	OP_INT_PREINC	 = 125,
	OP_INT_PREDEC	 = 126,
	OP_INT_POSTINC	 = 127,
	OP_INT_POSTDEC	 = 128,
	OP_INT_ADD	 = 129,
	OP_INT_SUBTRACT	 = 130,
	OP_INT_MULTIPLY	 = 131,
	OP_INT_DIVIDE	 = 132,
	OP_INT_MODULO	 = 133,
	OP_INT_NEGATE	 = 134,
	OP_INT_NOT	 = 135,
	OP_INT_ABS	 = 136,
	OP_INT_LT	 = 137,
	OP_INT_GT	 = 138,
	OP_INT_LE	 = 139,
	OP_INT_GE	 = 140,
	OP_INT_EQ	 = 141,
	OP_INT_NE	 = 142,
	OP_NUM_ADD	 = 143,
	OP_NUM_SUBTRACT	 = 144,
	OP_NUM_MULTIPLY	 = 145,
	OP_NUM_DIVIDE	 = 146,
	OP_NUM_ATAN2	 = 147,
	OP_NUM_POW	 = 148,
	OP_NUM_SIN	 = 149,
	OP_NUM_COS	 = 150,
	OP_NUM_EXP	 = 151,
	OP_NUM_LOG	 = 152,
	OP_NUM_SQRT	 = 153,
	OP_RV2GV	 = 154,
	OP_RV2SV	 = 155,
	OP_AV2ARYLEN	 = 156,
	OP_RV2CV	 = 157,
	OP_ANONCODE	 = 158,
	OP_PROTOTYPE	 = 159,
	OP_REFGEN	 = 160,
	OP_SREFGEN	 = 161,
	OP_REF		 = 162,
	OP_BLESS	 = 163,
	OP_BACKTICK	 = 164,
	OP_GLOB		 = 165,
	OP_READLINE	 = 166,
	OP_RCATLINE	 = 167,
	OP_REGCMAYBE	 = 168,
	OP_REGCRESET	 = 169,
	OP_REGCOMP	 = 170,
	OP_MATCH	 = 171,
	OP_QR		 = 172,
	OP_SUBST	 = 173,
	OP_SUBSTCONT	 = 174,
	OP_TRANS	 = 175,
	OP_TRANSR	 = 176,
	OP_LENGTH	 = 177,
	OP_SUBSTR	 = 178,
	OP_VEC		 = 179,
	OP_INDEX	 = 180,
	OP_RINDEX	 = 181,
	OP_SPRINTF	 = 182,
	OP_FORMLINE	 = 183,
	OP_ORD		 = 184,
	OP_CHR		 = 185,
	OP_CRYPT	 = 186,
	OP_UCFIRST	 = 187,
	OP_LCFIRST	 = 188,
	OP_UC		 = 189,
	OP_LC		 = 190,
	OP_QUOTEMETA	 = 191,
	OP_RV2AV	 = 192,
	OP_AELEMFAST	 = 193,
	OP_AELEMFAST_LEX = 194,
	OP_AELEM	 = 195,
	OP_I_AELEM	 = 196,
	OP_N_AELEM	 = 197,
	OP_S_AELEM	 = 198,
	OP_AELEMFAST_LEX_U = 199,
	OP_AELEM_U	 = 200,
	OP_I_AELEM_U	 = 201,
	OP_N_AELEM_U	 = 202,
	OP_S_AELEM_U	 = 203,
	OP_INT_AELEM	 = 204,
	OP_NUM_AELEM	 = 205,
	OP_STR_AELEM	 = 206,
	OP_INT_AELEM_U	 = 207,
	OP_NUM_AELEM_U	 = 208,
	OP_STR_AELEM_U	 = 209,
	OP_ASLICE	 = 210,
	OP_KVASLICE	 = 211,
	OP_AEACH	 = 212,
	OP_AKEYS	 = 213,
	OP_AVALUES	 = 214,
	OP_EACH		 = 215,
	OP_VALUES	 = 216,
	OP_KEYS		 = 217,
	OP_DELETE	 = 218,
	OP_EXISTS	 = 219,
	OP_RV2HV	 = 220,
	OP_HELEM	 = 221,
	OP_HSLICE	 = 222,
	OP_KVHSLICE	 = 223,
	OP_MULTIDEREF	 = 224,
	OP_UNPACK	 = 225,
	OP_PACK		 = 226,
	OP_SPLIT	 = 227,
	OP_JOIN		 = 228,
	OP_LIST		 = 229,
	OP_LSLICE	 = 230,
	OP_ANONLIST	 = 231,
	OP_ANONHASH	 = 232,
	OP_SPLICE	 = 233,
	OP_PUSH		 = 234,
	OP_POP		 = 235,
	OP_SHIFT	 = 236,
	OP_UNSHIFT	 = 237,
	OP_SORT		 = 238,
	OP_REVERSE	 = 239,
	OP_GREPSTART	 = 240,
	OP_GREPWHILE	 = 241,
	OP_MAPSTART	 = 242,
	OP_MAPWHILE	 = 243,
	OP_RANGE	 = 244,
	OP_FLIP		 = 245,
	OP_FLOP		 = 246,
	OP_AND		 = 247,
	OP_OR		 = 248,
	OP_XOR		 = 249,
	OP_DOR		 = 250,
	OP_COND_EXPR	 = 251,
	OP_ANDASSIGN	 = 252,
	OP_ORASSIGN	 = 253,
	OP_DORASSIGN	 = 254,
	OP_METHOD	 = 255,
	OP_ENTERSUB	 = 256,
	OP_ENTERXSSUB	 = 257,
	OP_LEAVESUB	 = 258,
	OP_LEAVESUBLV	 = 259,
	OP_SIGNATURE	 = 260,
	OP_CALLER	 = 261,
	OP_WARN		 = 262,
	OP_DIE		 = 263,
	OP_RESET	 = 264,
	OP_LINESEQ	 = 265,
	OP_NEXTSTATE	 = 266,
	OP_DBSTATE	 = 267,
	OP_UNSTACK	 = 268,
	OP_ENTER	 = 269,
	OP_LEAVE	 = 270,
	OP_SCOPE	 = 271,
	OP_ENTERITER	 = 272,
	OP_ITER		 = 273,
	OP_ITER_ARY	 = 274,
	OP_ITER_LAZYIV	 = 275,
	OP_ENTERLOOP	 = 276,
	OP_LEAVELOOP	 = 277,
	OP_RETURN	 = 278,
	OP_LAST		 = 279,
	OP_NEXT		 = 280,
	OP_REDO		 = 281,
	OP_DUMP		 = 282,
	OP_GOTO		 = 283,
	OP_EXIT		 = 284,
	OP_METHOD_NAMED	 = 285,
	OP_METHOD_SUPER	 = 286,
	OP_METHOD_REDIR	 = 287,
	OP_METHOD_REDIR_SUPER = 288,
	OP_ENTERGIVEN	 = 289,
	OP_LEAVEGIVEN	 = 290,
	OP_ENTERWHEN	 = 291,
	OP_LEAVEWHEN	 = 292,
	OP_BREAK	 = 293,
	OP_CONTINUE	 = 294,
	OP_OPEN		 = 295,
	OP_CLOSE	 = 296,
	OP_PIPE_OP	 = 297,
	OP_FILENO	 = 298,
	OP_UMASK	 = 299,
	OP_BINMODE	 = 300,
	OP_TIE		 = 301,
	OP_UNTIE	 = 302,
	OP_TIED		 = 303,
	OP_DBMOPEN	 = 304,
	OP_DBMCLOSE	 = 305,
	OP_SSELECT	 = 306,
	OP_SELECT	 = 307,
	OP_GETC		 = 308,
	OP_READ		 = 309,
	OP_ENTERWRITE	 = 310,
	OP_LEAVEWRITE	 = 311,
	OP_PRTF		 = 312,
	OP_PRINT	 = 313,
	OP_SAY		 = 314,
	OP_SYSOPEN	 = 315,
	OP_SYSSEEK	 = 316,
	OP_SYSREAD	 = 317,
	OP_SYSWRITE	 = 318,
	OP_EOF		 = 319,
	OP_TELL		 = 320,
	OP_SEEK		 = 321,
	OP_TRUNCATE	 = 322,
	OP_FCNTL	 = 323,
	OP_IOCTL	 = 324,
	OP_FLOCK	 = 325,
	OP_SEND		 = 326,
	OP_RECV		 = 327,
	OP_SOCKET	 = 328,
	OP_SOCKPAIR	 = 329,
	OP_BIND		 = 330,
	OP_CONNECT	 = 331,
	OP_LISTEN	 = 332,
	OP_ACCEPT	 = 333,
	OP_SHUTDOWN	 = 334,
	OP_GSOCKOPT	 = 335,
	OP_SSOCKOPT	 = 336,
	OP_GETSOCKNAME	 = 337,
	OP_GETPEERNAME	 = 338,
	OP_LSTAT	 = 339,
	OP_STAT		 = 340,
	OP_FTRREAD	 = 341,
	OP_FTRWRITE	 = 342,
	OP_FTREXEC	 = 343,
	OP_FTEREAD	 = 344,
	OP_FTEWRITE	 = 345,
	OP_FTEEXEC	 = 346,
	OP_FTIS		 = 347,
	OP_FTSIZE	 = 348,
	OP_FTMTIME	 = 349,
	OP_FTATIME	 = 350,
	OP_FTCTIME	 = 351,
	OP_FTROWNED	 = 352,
	OP_FTEOWNED	 = 353,
	OP_FTZERO	 = 354,
	OP_FTSOCK	 = 355,
	OP_FTCHR	 = 356,
	OP_FTBLK	 = 357,
	OP_FTFILE	 = 358,
	OP_FTDIR	 = 359,
	OP_FTPIPE	 = 360,
	OP_FTSUID	 = 361,
	OP_FTSGID	 = 362,
	OP_FTSVTX	 = 363,
	OP_FTLINK	 = 364,
	OP_FTTTY	 = 365,
	OP_FTTEXT	 = 366,
	OP_FTBINARY	 = 367,
	OP_CHDIR	 = 368,
	OP_CHOWN	 = 369,
	OP_CHROOT	 = 370,
	OP_UNLINK	 = 371,
	OP_CHMOD	 = 372,
	OP_UTIME	 = 373,
	OP_RENAME	 = 374,
	OP_LINK		 = 375,
	OP_SYMLINK	 = 376,
	OP_READLINK	 = 377,
	OP_MKDIR	 = 378,
	OP_RMDIR	 = 379,
	OP_OPEN_DIR	 = 380,
	OP_READDIR	 = 381,
	OP_TELLDIR	 = 382,
	OP_SEEKDIR	 = 383,
	OP_REWINDDIR	 = 384,
	OP_CLOSEDIR	 = 385,
	OP_FORK		 = 386,
	OP_WAIT		 = 387,
	OP_WAITPID	 = 388,
	OP_SYSTEM	 = 389,
	OP_EXEC		 = 390,
	OP_KILL		 = 391,
	OP_GETPPID	 = 392,
	OP_GETPGRP	 = 393,
	OP_SETPGRP	 = 394,
	OP_GETPRIORITY	 = 395,
	OP_SETPRIORITY	 = 396,
	OP_TIME		 = 397,
	OP_TMS		 = 398,
	OP_LOCALTIME	 = 399,
	OP_GMTIME	 = 400,
	OP_ALARM	 = 401,
	OP_SLEEP	 = 402,
	OP_SHMGET	 = 403,
	OP_SHMCTL	 = 404,
	OP_SHMREAD	 = 405,
	OP_SHMWRITE	 = 406,
	OP_MSGGET	 = 407,
	OP_MSGCTL	 = 408,
	OP_MSGSND	 = 409,
	OP_MSGRCV	 = 410,
	OP_SEMOP	 = 411,
	OP_SEMGET	 = 412,
	OP_SEMCTL	 = 413,
	OP_REQUIRE	 = 414,
	OP_DOFILE	 = 415,
	OP_HINTSEVAL	 = 416,
	OP_ENTEREVAL	 = 417,
	OP_LEAVEEVAL	 = 418,
	OP_ENTERTRY	 = 419,
	OP_LEAVETRY	 = 420,
	OP_GHBYNAME	 = 421,
	OP_GHBYADDR	 = 422,
	OP_GHOSTENT	 = 423,
	OP_GNBYNAME	 = 424,
	OP_GNBYADDR	 = 425,
	OP_GNETENT	 = 426,
	OP_GPBYNAME	 = 427,
	OP_GPBYNUMBER	 = 428,
	OP_GPROTOENT	 = 429,
	OP_GSBYNAME	 = 430,
	OP_GSBYPORT	 = 431,
	OP_GSERVENT	 = 432,
	OP_SHOSTENT	 = 433,
	OP_SNETENT	 = 434,
	OP_SPROTOENT	 = 435,
	OP_SSERVENT	 = 436,
	OP_EHOSTENT	 = 437,
	OP_ENETENT	 = 438,
	OP_EPROTOENT	 = 439,
	OP_ESERVENT	 = 440,
	OP_GPWNAM	 = 441,
	OP_GPWUID	 = 442,
	OP_GPWENT	 = 443,
	OP_SPWENT	 = 444,
	OP_EPWENT	 = 445,
	OP_GGRNAM	 = 446,
	OP_GGRGID	 = 447,
	OP_GGRENT	 = 448,
	OP_SGRENT	 = 449,
	OP_EGRENT	 = 450,
	OP_GETLOGIN	 = 451,
	OP_SYSCALL	 = 452,
	OP_LOCK		 = 453,
	OP_ONCE		 = 454,
	OP_CUSTOM	 = 455,
	OP_COREARGS	 = 456,
	OP_RUNCV	 = 457,
	OP_FC		 = 458,
	OP_PADCV	 = 459,
	OP_INTROCV	 = 460,
	OP_CLONECV	 = 461,
	OP_PADRANGE	 = 462,
	OP_REFASSIGN	 = 463,
	OP_LVREF	 = 464,
	OP_LVREFSLICE	 = 465,
	OP_LVAVREF	 = 466,
	OP_ANONCONST	 = 467,
	OP_max		
} opcode;

#define MAXO 468
#define OP_FREED MAXO

/* PL_opargs encoding */

/* Lowest 10 bits of PL_opargs */
#define OA_MARK	1
#define OA_FOLDCONST	2
#define OA_RETSCALAR	4
#define OA_TARGET	8
#define OA_TARGLEX	24
#define OA_OTHERINT	32
#define OA_DANGEROUS	64
#define OA_DEFGV	128
#define OA_PURE	256
#define OA_BOXRET	512

/* The next 4 bits (10..13) encode op class information */
#define OCSHIFT 10

/* Each remaining 4bit nybbles of PL_opargs (i.e. bits 14..17, 18..21 etc)
 * encode the type for each arg */
#define OASHIFT 14

/* arg types */
#define OA_SCALAR  1
#define OA_LIST    2
#define OA_AVREF   3
#define OA_HVREF   4
#define OA_CVREF   5
#define OA_FILEREF 6
#define OA_SCALARREF 7
#define OA_OPTIONAL 8

/* 0b0011_1100_0000_0000 / 0xf000 */
#define OA_CLASS_MASK (0xf << OCSHIFT)

#define OA_BASEOP 	(0 << OCSHIFT)
#define OA_UNOP 	(1 << OCSHIFT)
#define OA_BINOP 	(2 << OCSHIFT)
#define OA_LOGOP 	(3 << OCSHIFT)
#define OA_LISTOP 	(4 << OCSHIFT)
#define OA_PMOP 	(5 << OCSHIFT)
#define OA_SVOP 	(6 << OCSHIFT)
#define OA_PADOP 	(7 << OCSHIFT)
#define OA_PVOP_OR_SVOP (8 << OCSHIFT)
#define OA_LOOP 	(9 << OCSHIFT)
#define OA_COP 		(10 << OCSHIFT)
#define OA_BASEOP_OR_UNOP (11 << OCSHIFT)
#define OA_FILESTATOP 	(12 << OCSHIFT)
#define OA_LOOPEXOP 	(13 << OCSHIFT)
#define OA_METHOP 	(14 << OCSHIFT)
#define OA_UNOP_AUX 	(15 << OCSHIFT)


#define OP_HAS_TARGLEX(ot) ((PL_opargs[ot] & OA_TARGLEX) == OA_TARGLEX)

#define OpCLASS(ot)      (PL_opargs[(ot)] & OA_CLASS_MASK)
#define OP_IS_BASEOP(ot) (OpCLASS(ot) == OA_BASEOP || OpCLASS(ot) == OA_BASEOP_OR_UNOP)
#define OP_IS_UNOP(ot)   (OpCLASS(ot) == OA_UNOP || OpCLASS(ot) == OA_BASEOP_OR_UNOP)
#define OP_IS_BINOP(ot)  OpCLASS(ot) == OA_BINOP
#define OP_IS_LOGOP(ot)  OpCLASS(ot) == OA_LOGOP
#define OP_IS_LISTOP(ot) OpCLASS(ot) == OA_LISTOP
#define OP_IS_PMOP(ot)   OpCLASS(ot) == OA_PMOP
#define OP_IS_SVOP(ot)   (OpCLASS(ot) == OA_SVOP || OpCLASS(ot) == OA_PVOP_OR_SVOP)
#define OP_IS_PADOP(ot)  OpCLASS(ot) == OA_PADOP
#define OP_IS_LOOP(ot)   OpCLASS(ot) == OA_LOOP
#define OP_IS_COP(ot)    OpCLASS(ot) == OA_COP
#define OP_IS_FILESTATOP(ot) OpCLASS(ot) == OA_FILESTATOP
#define OP_IS_METHOP(ot) OpCLASS(ot) == OA_METHOP

/* The other OP_IS_* macros are optimized to a simple range check because
   all the member OPs are contiguous in regen/opcodes table.
   regen/opcode.pl verifies the range contiguity, or generates an OR-equals
   expression */

#define OP_HAS_LIST(ot)	\
	((ot) == OP_AASSIGN || \
	 (ot) == OP_ANONHASH || \
	 (ot) == OP_ANONLIST || \
	 (ot) == OP_ASLICE || \
	 (ot) == OP_CHMOD || \
	 (ot) == OP_CHOMP || \
	 (ot) == OP_CHOP || \
	 (ot) == OP_CHOWN || \
	 (ot) == OP_DIE || \
	 (ot) == OP_ENTERSUB || \
	 (ot) == OP_ENTERXSSUB || \
	 (ot) == OP_EXEC || \
	 (ot) == OP_FORMLINE || \
	 (ot) == OP_GREPSTART || \
	 (ot) == OP_HSLICE || \
	 (ot) == OP_JOIN || \
	 (ot) == OP_KILL || \
	 (ot) == OP_KVASLICE || \
	 (ot) == OP_KVHSLICE || \
	 (ot) == OP_LIST || \
	 (ot) == OP_LSLICE || \
	 (ot) == OP_MAPSTART || \
	 (ot) == OP_OPEN || \
	 (ot) == OP_PACK || \
	 (ot) == OP_PRINT || \
	 (ot) == OP_PRTF || \
	 (ot) == OP_PUSH || \
	 (ot) == OP_REFGEN || \
	 (ot) == OP_REPEAT || \
	 (ot) == OP_RETURN || \
	 (ot) == OP_REVERSE || \
	 (ot) == OP_SAY || \
	 (ot) == OP_SORT || \
	 (ot) == OP_SPLICE || \
	 (ot) == OP_SPRINTF || \
	 (ot) == OP_SYSCALL || \
	 (ot) == OP_SYSTEM || \
	 (ot) == OP_TIE || \
	 (ot) == OP_UNLINK || \
	 (ot) == OP_UNSHIFT || \
	 (ot) == OP_UTIME || \
	 (ot) == OP_WARN)

#define OP_IS_SOCKET(ot)	\
	((ot) >= OP_SEND && (ot) <= OP_GETPEERNAME)

#define OP_IS_FILETEST(ot)	\
	((ot) >= OP_FTRREAD && (ot) <= OP_FTBINARY)

#define OP_IS_FILETEST_ACCESS(ot)	\
	((ot) >= OP_FTRREAD && (ot) <= OP_FTEEXEC)

#define OP_IS_NUMCOMPARE(ot)	\
	((ot) >= OP_LT && (ot) <= OP_I_CMP)

#define OP_IS_DIRHOP(ot)	\
	((ot) >= OP_READDIR && (ot) <= OP_CLOSEDIR)

#define OP_IS_INFIX_BIT(ot)	\
	((ot) >= OP_BIT_AND && (ot) <= OP_S_BIT_OR)

#define OP_IS_PADVAR(ot)	\
	((ot) >= OP_PADSV && (ot) <= OP_PADANY)

#define OP_IS_ITER(ot)	\
	((ot) >= OP_ITER && (ot) <= OP_ITER_LAZYIV)

/* backcompat old Perl 5 names: */
#if 1
#define OP_NCMP		 OP_CMP
#define OP_I_NCMP	 OP_I_CMP
#define OP_SLT		 OP_S_LT
#define OP_SGT		 OP_S_GT
#define OP_SLE		 OP_S_LE
#define OP_SGE		 OP_S_GE
#define OP_SEQ		 OP_S_EQ
#define OP_SNE		 OP_S_NE
#define OP_SCMP		 OP_S_CMP
#define OP_NBIT_AND	 OP_I_BIT_AND
#define OP_NBIT_XOR	 OP_I_BIT_XOR
#define OP_NBIT_OR	 OP_I_BIT_OR
#define OP_SBIT_AND	 OP_S_BIT_AND
#define OP_SBIT_XOR	 OP_S_BIT_XOR
#define OP_SBIT_OR	 OP_S_BIT_OR
#define OP_NCOMPLEMENT	 OP_I_COMPLEMENT
#define OP_SCOMPLEMENT	 OP_S_COMPLEMENT

#define Perl_pp_ncmp	 Perl_pp_cmp
#define Perl_pp_i_ncmp	 Perl_pp_i_cmp
#define Perl_pp_slt	 Perl_pp_s_lt
#define Perl_pp_sgt	 Perl_pp_s_gt
#define Perl_pp_sle	 Perl_pp_s_le
#define Perl_pp_sge	 Perl_pp_s_ge
#define Perl_pp_seq	 Perl_pp_s_eq
#define Perl_pp_sne	 Perl_pp_s_ne
#define Perl_pp_scmp	 Perl_pp_s_cmp
#define Perl_pp_nbit_and Perl_pp_i_bit_and
#define Perl_pp_nbit_xor Perl_pp_i_bit_xor
#define Perl_pp_nbit_or	 Perl_pp_i_bit_or
#define Perl_pp_sbit_and Perl_pp_s_bit_and
#define Perl_pp_sbit_xor Perl_pp_s_bit_xor
#define Perl_pp_sbit_or	 Perl_pp_s_bit_or
#define Perl_pp_ncomplement Perl_pp_i_complement
#define Perl_pp_scomplement Perl_pp_s_complement
#endif

/* ex: set ro: */
